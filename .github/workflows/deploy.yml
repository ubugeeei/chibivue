name: Deploy chibivue Book to Pages

on:
  push:
    branches: [main, redirect-to-chibivue-land]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if it's the original repo and the main branch
        run: |
          if [[ "${{ github.repository }}" == "ubugeeei/chibivue" && "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "This is the original repo's main branch, running the workflow."
          else
            echo "This is a fork or a different branch, skipping the workflow."
            exit 0
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 9
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install dependencies
        run: pnpm install
      - name: Build with VitePress
        run: pnpm run book:build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: book/online-book/.vitepress/dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: notify
        run: |
          curl -H 'Content-Type:application/json' "${{secrets.DISCORD_WEBHOOK_URL}}" -d '{"content": "Deployed Online Book!\n ${{ github.event.repository.url }}/actions/runs/${{ github.run_id }}"}'
